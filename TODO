DONE

	Setup home network so all traffic goes across spectrum, not starlink.
	
	We need more relays in dev for testing. Asked van to setup more AWS relays (5-6 more), in north america for testing.

	Configure raspberry customer so that it has fairly random selection of best routes, eg. by having a very wide route selection threshold, and route switch threshold

	Split apart VM and LB health checks. They're not the same!

	Make sure tests and happy path works with new health checks

	Setup services in dev with new health checks.

	Setup raspberry_client and raspberry_server as commands in the main backend repo. This is a much better way to work, and we can leverage dev environment and semaphore to deploy them.

	Server does not appear to be property detecting the fallback to direct only... this is needed so the server is robust, even when the server backend goes down.

	Add new spam log level

TODO

	--------

	Create a raspberry_backend service in golang.

	This service just tracks raspberry servers that are available to connect to.

	This way we can have raspberry pi servers be zero configuration and just run in a MIG.

	--------

	Setup raspberry pi client to be a self-contained program that runs multiple clients on n threads.

	This way it can just be run in a MIG and be zero configuration.

	--------

	Setup raspberry_backend, raspberry_client and raspberry_server artifacts to be built.

	--------

	Setup raspberry_backend, raspberry_client and raspberry_server MIGs in dev.

	--------









































	--------------

	The leader election is pretty clearly broken.

	I can start one relay backend, then start another, -- and the new one immediately becomes the leader. No...

	--------------

	Need to take the max of direct PL and real PL when calculating max direct PL seen

	When the raspberry pi runs at 1 packet per-second, real PL will tend to be lower, statistically speaking than near relay pings, until probabilistically enough slices have passed.

	--------------

	We need to track max direct packet loss seen

	I believe that a key component of the old system was comparing max packet loss on direct vs. max PL on relays, so over time we had some code that went "ok, so we have intermittent packet loss, loosen it up on the near relays".

	We also would need to not filter out relays forever, but instead, store them unmolested, and filter them temporarily before we use them for routing.

	--------------

	Why does it only ever show 7 routes, for 7 near relays?

	Is there something in our code that restricts to the best route, per-near relay only?

	--------------

	Once this is done, we can remove the packet loss threshold.

	--------------

	Setup google.virginia.3 relay myself, so I can understand the process and potentially streamline it.

	--------------

	Setup a deploy key for the raspberry repo.

	Set up dr strange so I can clone the raspberry repo to /mnt/c/raspberry

	Build and run 25 raspberry pi clients on dr strange continuously.

	-----------------

	Streamline the process to setup a new machine to be a relay.

	-----------------

	Instead of trying to change the hostname, just change the shell prompt to the relay name. Much easier, with no side effects.

	-----------------

	Build a relay release process in semaphore.

	-----------------

